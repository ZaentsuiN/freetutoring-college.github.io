<!DOCTYPE html>
<html lang="en">
<head>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <meta charset="UTF-8">
  <title>NumWorks Calculator</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      background: #eaeaea;
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }

    .calculator {
      background: #fff;
      border-radius: 20px;
      box-shadow: 0 0 16px #bbb;
      width: 100%;
      max-width: 320px;
      padding: 16px 12px 20px;
      font-family: 'Segoe UI', Arial, sans-serif;
    }

    .brand {
      text-align: center;
      font-size: 13px;
      color: #aaa;
      margin-bottom: 8px;
      letter-spacing: 2px;
      font-weight: bold;
    }

    .screen {
      height: 160px;
      background: #f8f8f8;
      border: 2px solid #eee;
      border-radius: 8px;
      margin-bottom: 14px;
      padding: 8px 12px;
      color: #444;
      font-size: 22px;
      display: flex;
      align-items: flex-end;
      justify-content: flex-end;
      word-break: break-all;
    }

    .keypad {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 8px;
    }

    button.btn {
      width: 100%;
      aspect-ratio: 1;
      border-radius: 50%;
      border: 1px solid #e1e1e1;
      background: #f9f9f9;
      font-size: 15px;
      color: #666;
      display: flex;
      justify-content: center;
      align-items: center;
      box-shadow: 0 1px 2px #eee;
      cursor: pointer;
      user-select: none;
      transition: background 0.1s;
    }

    button.btn:active {
      background: #ececec;
    }

    .btn-yellow {
      background: orange;
      color: white;
    }

    .btn-func {
      color: #4682b4;
      font-weight: bold;
    }

    .btn-op {
      color: #b22222;
      font-weight: bold;
    }

    .btn-clear {
      color: #fff;
      background: #b22222;
      font-weight: bold;
    }

    .btn-wide {
      grid-column: span 2;
    }
  </style>
</head>
<body>
  <div class="calculator">
    <div class="screen" id="display" aria-live="polite"></div>
    <div class="keypad">
      <button class="btn btn-func" data-value="sin(" aria-label="sine">sin</button>
      <button class="btn btn-func" data-value="cos(" aria-label="cosine">cos</button>
      <button class="btn btn-func" data-value="tan(" aria-label="tangent">tan</button>
      <button class="btn btn-func" data-value="log(" aria-label="log base 10">log</button>
      <button class="btn btn-func" data-value="ln(" aria-label="natural log">ln</button>

      <button class="btn btn-clear" id="clear" aria-label="clear">C</button>
      <button class="btn btn-func" data-value="√(" aria-label="square root">√</button>
      <button class="btn btn-op" data-value="(">(</button>
      <button class="btn btn-op" data-value=")">)</button>
      <button class="btn btn-op" data-value="π">π</button>

      <button class="btn btn-op" data-value="e">e</button>
      <button class="btn btn-clear" id="backspace" aria-label="backspace">&#9003;</button>
      <button class="btn" data-value="7">7</button>
      <button class="btn" data-value="8">8</button>
      <button class="btn" data-value="9">9</button>

      <button class="btn btn-op" data-value="/">÷</button>
      <button class="btn btn-op" data-value="^">^</button>
       <button class="btn btn-op" data-value="Ans">Ans</button>
      <button class="btn" data-value="4">4</button>
      <button class="btn" data-value="5">5</button>
      <button class="btn" data-value="6">6</button>

      <button class="btn btn-op" data-value="*">×</button>
      <button class="btn btn-op" data-value="-">−</button>
      <div></div>
      <button class="btn" data-value="1">1</button>
      <button class="btn" data-value="2">2</button>
      <button class="btn" data-value="3">3</button>

      <button class="btn btn-op" data-value="+">+</button>
      <button class="btn" data-value=".">.</button>
      <div></div>
      <button class="btn btn-wide" data-value="0">0</button>
      <button class="btn btn-yellow btn-wide" id="equals">=</button>
    </div>
  </div>

  <script>
    const display = document.getElementById('display');
    let expression = "";
    let lastAnswer = 0;

    if (!Math.log10) {
      Math.log10 = x => Math.log(x) / Math.LN10;
    }

    function updateDisplay() {
      display.textContent = expression || "0";
    }

    function factorial(n) {
      n = parseInt(n);
      if (isNaN(n) || n < 0) return NaN;
      return n <= 1 ? 1 : n * factorial(n - 1);
    }

    function parseInput(input) {
      return input
        .replace(/÷/g, "/")
        .replace(/×/g, "*")
        .replace(/%/g, "/100")
        .replace(/Ans/g, lastAnswer)
        .replace(/π/g, "Math.PI")
        .replace(/e(?![a-zA-Z])/g, "Math.E")
        .replace(/sqrt|√/g, "Math.sqrt")
        .replace(/(\d+)!/g, (_, n) => factorial(n))
        .replace(/e\^/g, "Math.exp")
        .replace(/log\(/g, "Math.log10(")
        .replace(/ln\(/g, "Math.log(")
        .replace(/sin\(/g, "Math.sin(")
        .replace(/cos\(/g, "Math.cos(")
        .replace(/tan\(/g, "Math.tan(")
        .replace(/asin\(/g, "Math.asin(")
        .replace(/acos\(/g, "Math.acos(")
        .replace(/atan\(/g, "Math.atan(")
        .replace(/\^/g, "**")
        .replace(/10\^/g, "10**")
        .replace(/(\d)(?=\()/g, "$1*")
        .replace(/\)(?=\d)/g, ")*");
    }

    document.querySelectorAll('.btn[data-value]').forEach(btn => {
      btn.addEventListener('click', () => {
        expression += btn.getAttribute('data-value');
        updateDisplay();
      });
    });

    document.getElementById('equals').addEventListener('click', () => {
      try {
        const jsExpr = parseInput(expression);
        let result = eval(jsExpr);
        if (typeof result === 'number' && !isFinite(result)) throw 'Error';
        display.textContent = result;
        lastAnswer = result;
        expression = result.toString();
      } catch {
        display.textContent = "Error";
        expression = "";
      }
    });

    document.getElementById('clear').addEventListener('click', () => {
      expression = "";
      updateDisplay();
    });

    document.getElementById('backspace').addEventListener('click', () => {
      expression = expression.slice(0, -1);
      updateDisplay();
    });

    updateDisplay();
  </script>
</body>
</html>
Basic Arithmetic Operations: Addition, subtraction, multiplication, division.
Scientific Functions: Trigonometric functions (sin, cos, tan), inverse trigonometric functions sin^-1, cos^-1, tan^-1, hyperbolic functions sinh, cosh, tanh, logarithms (log, ln), exponential functions, and power functions.
Graphing Capabilities: Plotting functions, parametric equations, and polar equations. It can also handle multiple graphs on the same screen.
Statistics and Probability: Mean, median, mode, standard deviation, regression analysis, and probability distributions.
Matrices and Vectors: Matrix operations, vector calculations, and determinants.
Complex Numbers: Operations with complex numbers, including addition, subtraction, multiplication, and division.
Programming: Some models allow for basic programming, enabling users to write scripts and programs for custom calculations.
Equation Solving: Solving equations and systems of equations.
Calculus: Derivatives, integrals, and limits.
Financial Calculations: Time value of money, interest rates, and loan calculations.
Unit Conversions: Conversions between different units of measurement.
Memory and Storage: Ability to store and recall variables, constants, and functions.
Other functions:
x^2 for squaring.
x^3 for cubing.
sqrt for square root.
π for Pi.
Ans for the previous answer.
EXE for executing commands.

Jump to Sections



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jump to Sections Example</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
        }
        
        .content {
            max-width: 800px;
            margin: auto;
        }
        
        h1,h2{
            text-align: center;
        }
        section {
            margin-bottom: 30px;
        }
        
        #back-to-top {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background-color: #333;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            cursor: pointer;
            display: none;
            transition: opacity 0.3s;
        }
        
        #back-to-top:hover {
            background-color: #555;
        }
        .table-of-contents {
            position: fixed;
            top: 15px;
            left: 10px;
            background: white;
            padding: 15px;
            border: 1px solid;
            border-radius: 5px;
            margin: auto;
            color: #4d3319;
        }
        
        .table-of-contents h2 {
            margin-top: 0;
        }
        
        .table-of-contents ul {
            padding-left: 15px;
        }
        
        .table-of-contents li {
            margin-bottom: 15px;
        }
        
        .table-of-contents a {
            text-decoration: none;
            color: #0066cc;
        }
        
        .table-of-contents a:hover {
            text-decoration: underline;
            padding: 13px 15px;
            cursor: pointer;
        background: #dee2e6;
        }
    </style>
</head>
<body>
    <div class="content">
        <h1 id="top">- Table of Contents -</h1>
        
        <!-- Table of Contents -->
        <div class="table-of-contents">
            <h3>Table of Contents</h3>
            <ul>
                <li><a href="#section1">Section 1</a></li>
                <li><a href="#section2">Section 2</a></li>
                <li><a href="#section3">Section 3</a></li>
                <li><a href="#section4">Section 4</a></li>
                <li><a href="#section5">Section 5</a></li>
            </ul>
        </div>
        
        <section id="section1">
            <h2>Section 1</h2>
        </section>
        
        <section id="section2">
            <h2>Section 2</h2>
        
        </section>
        
        <section id="section3">
            <h2>Section 3</h2>
            </section>
        
        <section id="section4">
            <h2>Section 4</h2>
            </section>
        
        <section id="section5">
            <h2>Section 5</h2>
            </section>
    </div>
    
    <button id="back-to-top" title="Back to Top">Back to Top</button>

    <script>
        // Get the button
        const backToTopButton = document.getElementById("back-to-top");
        
        // Show the button when the user scrolls down 300px from the top
        window.onscroll = function() {
            if (document.body.scrollTop > 300 || document.documentElement.scrollTop > 300) {
                backToTopButton.style.display = "block";
            } else {
                backToTopButton.style.display = "none";
            }
        };
        
        // Scroll back to the top when the button is clicked
        backToTopButton.addEventListener("click", function() {
            // For Safari
            document.body.scrollTop = 0;
            // For Chrome, Firefox, IE and Opera
            document.documentElement.scrollTop = 0;
        });
    </script>
</body>
</html>



Sections with Dark Mode



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colorful Sections with Dark Mode</title>
    <style>
        :root {
            --bg-color: #ffffff;
            --text-color: #333333;
            --primary-color: #4a6fa5;
            --secondary-color: #ff7e5f;
            --section1-color: #e6f7ff;
            --section2-color: #fff5e6;
        }

        [data-theme="dark"] {
            --bg-color: #1a1a1a;
            --text-color: #f0f0f0;
            --primary-color: #6b9bcf;
            --secondary-color: #ff9f7f;
            --section1-color: #00334d;
            --section2-color: #332100;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 0;
        }

        h1 {
            color: var(--primary-color);
            margin: 0;
        }

        .theme-toggle {
            background: var(--secondary-color);
            border: none;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-weight: bold;
            color: white;
            transition: transform 0.2s;
        }

        .theme-toggle:hover {
            transform: scale(1.05);
        }

        .section {
            padding: 60px 0;
            margin: 30px 0;
            border-radius: 15px;
            transition: background-color 0.3s;
        }

        .section-1 {
            background-color: var(--section1-color);
        }

        .section-2 {
            background-color: var(--section2-color);
        }

        .section-title {
            color: var(--primary-color);
            margin-top: 0;
        }

        .section-content {
            line-height: 1.6;
        }

        @media (max-width: 768px) {
            .section {
                padding: 40px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Colorful Sections</h1>
            <button class="theme-toggle" id="themeToggle">Dark Mode</button>
        </header>

        <section class="section section-1">
            <div class="container">
                <h2 class="section-title">First Colorful Section</h2>
                <div class="section-content">
                    <p>This is the first section with a light blue background in light mode and a deep blue in dark mode. The text color automatically adjusts for readability. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in dui mauris.</p>
                    <p>Vivamus suscipit tortor eget felis porttitor volutpat. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.</p>
                </div>
            </div>
        </section>

        <section class="section section-2">
            <div class="container">
                <h2 class="section-title">Second Colorful Section</h2>
                <div class="section-content">
                    <p>This section has a light orange background in light mode and a dark brown in dark mode. The toggle button changes all colors at once. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in dui mauris.</p>
                    <p>Vivamus suscipit tortor eget felis porttitor volutpat. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus.</p>
                </div>
            </div>
        </section>
    </div>

    <script>
        const themeToggle = document.getElementById('themeToggle');
        const htmlElement = document.documentElement;
        let isDarkMode = false;

        // Check for saved theme preference or use system preference
        const savedTheme = localStorage.getItem('theme');
        const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

        if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
            setDarkMode(true);
        }

        themeToggle.addEventListener('click', () => {
            isDarkMode = !isDarkMode;
            setDarkMode(isDarkMode);
        });

        function setDarkMode(darkMode) {
            if (darkMode) {
                htmlElement.setAttribute('data-theme', 'dark');
                themeToggle.textContent = 'Light Mode';
                localStorage.setItem('theme', 'dark');
            } else {
                htmlElement.removeAttribute('data-theme');
                themeToggle.textContent = 'Dark Mode';
                localStorage.setItem('theme', 'light');
            }
            isDarkMode = darkMode;
        }
    </script>
</body>
</html>



colorful sections with a dark/light mode 


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Two Colorful Sections</title>
    <style>/* Basic Reset & Defaults */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: sans-serif;
    line-height: 1.6;
    /* Transitions applied to body for smooth global changes */
    transition: background-color 0.3s ease, color 0.3s ease;
}

/* --- Color Variables --- */
:root {
    /* Light Mode Colors */
    --bg-body-light: #f8f9fa;
    --text-body-light: #212529;
    --bg-section1-light: #add8e6; /* Light Blue */
    --text-section1-light: #1a2b33; /* Darker text for light blue */
    --bg-section2-light: #ffdab9; /* Light Orange (Peach Puff) */
    --text-section2-light: #4d3319; /* Darker text for light orange */
    --button-bg-light: #e9ecef;
    --button-text-light: #495057;
    --button-hover-bg-light: #dee2e6;
    --header-bg-light: #ffffff;

    /* Dark Mode Colors - Defined but applied via [data-theme='dark'] */
    --bg-body-dark: #1a1a1a; /* Darker gray */
    --text-body-dark: #f8f9fa;
    --bg-section1-dark: #00008b; /* Deep Blue */
    --text-section1-dark: #e6f0ff; /* Light text for deep blue */
    --bg-section2-dark: #5c4033; /* Dark Brown */
    --text-section2-dark: #ffe8d6; /* Light text for dark brown */
    --button-bg-dark: #343a40;
    --button-text-dark: #f8f9fa;
    --button-hover-bg-dark: #495057;
    --header-bg-dark: #212529;
}

/* Apply Light Mode Colors by Default */
body {
    background-color: var(--bg-body-light);
    color: var(--text-body-light);
}

.site-header {
    background-color: var(--header-bg-light);
}

.section-1 {
    background-color: var(--bg-section1-light);
    color: var(--text-section1-light);
}

.section-2 {
    background-color: var(--bg-section2-light);
    color: var(--text-section2-light);
}

#mode-toggle {
    background-color: var(--button-bg-light);
    color: var(--button-text-light);
}
#mode-toggle:hover {
    background-color: var(--button-hover-bg-light);
}


/* Apply Dark Mode Colors when data-theme='dark' */
html[data-theme='dark'] body {
    background-color: var(--bg-body-dark);
    color: var(--text-body-dark);
}

html[data-theme='dark'] .site-header {
    background-color: var(--header-bg-dark);
}

html[data-theme='dark'] .section-1 {
    background-color: var(--bg-section1-dark);
    color: var(--text-section1-dark);
}

html[data-theme='dark'] .section-2 {
    background-color: var(--bg-section2-dark);
    color: var(--text-section2-dark);
}

html[data-theme='dark'] #mode-toggle {
    background-color: var(--button-bg-dark);
    color: var(--button-text-dark);
}
html[data-theme='dark'] #mode-toggle:hover {
    background-color: var(--button-hover-bg-dark);
}

/* --- Layout & General Styling --- */
.site-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    /* Transition for header background */
    transition: background-color 0.3s ease;
}

.site-header h1 {
    font-size: 1.5rem;
}

#mode-toggle {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    /* Transition for button colors and hover */
    transition: background-color 0.2s ease, color 0.2s ease;
}

main {
    padding: 1rem; /* Padding around the main content area */
}

.colorful-section {
    padding: 2rem; /* Default padding */
    margin-bottom: 1rem;
    border-radius: 8px;
    /* Transition for section background and text colors */
    transition: background-color 0.3s ease, color 0.3s ease;
}
.colorful-section:last-child {
    margin-bottom: 0;
}

.colorful-section h2 {
    margin-bottom: 1rem;
    font-size: 1.8rem;
}

.colorful-section p {
    margin-bottom: 0.5rem;
}


/* --- Responsive Design --- */
@media (min-width: 768px) {
    /* Increase padding on larger screens if desired */
    .colorful-section {
        padding: 3rem;
    }
    main {
        padding: 2rem;
    }
    .site-header {
        padding: 1rem 4rem;
    }
}

@media (max-width: 480px) {
    /* Adjust padding for smaller mobile screens */
    .site-header {
        padding: 0.8rem 1rem;
        flex-direction: column; /* Stack header items on very small screens */
        gap: 0.5rem;
    }
    .site-header h1 {
        font-size: 1.2rem;
    }
    main {
        padding: 0.5rem;
    }
     .colorful-section {
        padding: 1.5rem; /* Slightly reduce padding */
    }
}</style>
    ///<link rel="stylesheet" href="style.css">
</head>
<body>
    <header class="site-header">
        <h1>Colorful Page</h1>
        <button id="mode-toggle" aria-label="Toggle dark/light mode">
            Toggle Mode
        </button>
    </header>

    <main>
        <section class="colorful-section section-1">
            <h2>Section 1</h2>
            <p>This section has a light blue background in light mode and a deep blue background in dark mode. The text color adjusts automatically for readability.</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
        </section>

        <section class="colorful-section section-2">
            <h2>Section 2</h2>
            <p>This section uses light orange in light mode and dark brown in dark mode. Contrast is maintained for the text here as well.</p>
            <p>Quisquam voluptatum Amet laudantium Nemo.</p>
        </section>
    </main>
<script>const toggleButton = document.getElementById('mode-toggle');
const htmlElement = document.documentElement; // Target the <html> element

// Function to apply the theme
function applyTheme(theme) {
    htmlElement.setAttribute('data-theme', theme);
    // Update button text based on the current theme
    if (theme === 'dark') {
        toggleButton.textContent = 'Switch to Light Mode';
        toggleButton.setAttribute('aria-label', 'Switch to light mode');
    } else {
        toggleButton.textContent = 'Switch to Dark Mode';
        toggleButton.setAttribute('aria-label', 'Switch to dark mode');
    }
    // Save the user's preference to localStorage
    localStorage.setItem('theme', theme);
}

// Function to toggle between light and dark mode
function toggleTheme() {
    const currentTheme = htmlElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    applyTheme(newTheme);
}

// --- Initialization ---

// 1. Check localStorage for a saved theme preference
const savedTheme = localStorage.getItem('theme');

// 2. Check system preference
const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');

let initialTheme = 'light'; // Default to light

if (savedTheme) {
    // Use saved theme if available
    initialTheme = savedTheme;
} else if (prefersDarkScheme.matches) {
    // Otherwise, use system preference
    initialTheme = 'dark';
}

// Apply the determined initial theme
applyTheme(initialTheme);

// Add event listener to the toggle button
toggleButton.addEventListener('click', toggleTheme);

// Optional: Listen for changes in system preference *if* no user preference is saved
// This part is slightly more complex as it should ideally only apply
// if the user hasn't manually overridden the theme yet.
// For simplicity, the core requirement is met by checking on load.
// If you want it to auto-update *while the page is open* when system settings change
// (and localStorage is not set), you could add:
/*
prefersDarkScheme.addEventListener('change', (e) => {
    // Only apply system preference change if localStorage is not set
    if (!localStorage.getItem('theme')) {
        applyTheme(e.matches ? 'dark' : 'light');
    }
});
*/
</script>
    /// <script src="script.js"></script>
</body>
</html>
