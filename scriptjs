<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Download Form Data as TXT</title>
</head>
<body>
    <h1>Fill the Form</h1>
    <form id="dataForm">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required><br><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br><br>

        <label for="subject">Subject:</label>
        <input type="text" id="subject" name="subject" required><br><br>

        <label for="message">Message:</label>
        <textarea id="message" name="message" required></textarea><br><br>

        <label for="course">Course:</label>
        <input type="text" id="course" name="course" required><br><br>

        <label for="availability">Availability:</label>
        <input type="text" id="availability" name="availability" required><br><br>

        <button type="button" onclick="downloadFormData()">Download as TXT</button>
    </form>

    <script>
function emailFormData() {
            // Collect form data
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                subject: document.getElementById('subject').value,
                message: document.getElementById('message').value,
                course: document.getElementById('course').value,
                availability: document.getElementById('availability').value,
            };

            // Validation: Ensure all fields are filled
            for (const key in formData) {
                if (!formData[key].trim()) {
                    alert(`Please fill in the ${key} field.`);
                    return; // Stop execution if a field is empty
                }
            }
// Ask for confirmation before submitting
const userConfirmed = confirm('Are you sure you want to submit the form?');
    if (userConfirmed) {
        // If the user clicks "OK", submit the form
        alert('Form submitted successfully!');
        this.submit(); // You can submit the form programmatically here
    } else {
        // If the user clicks "Cancel", do nothing
        alert('Form submission canceled.');
        return;
    }
            // Format the email body text
            const emailBody = `
Name: ${formData.name}
Email: ${formData.email}
Subject: ${formData.subject}
Message: ${formData.message}
Course: ${formData.course}
Availability: ${formData.availability}
            `.trim();

            // Encode the subject and body for the mailto link
            const encodedBody = encodeURIComponent(emailBody);
            const encodedSubject = encodeURIComponent(formData.subject || "Form Submission");

            // Generate the mailto link
            const mailtoLink = `mailto:tutoring@example.com?subject=${encodedSubject}&body=${encodedBody}`;

            // Open the mailto link (trigger email client)
            window.location.href = mailtoLink;
}


        function downloadFormData() {
            // Collect form data
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                subject: document.getElementById('subject').value,
                message: document.getElementById('message').value,
                course: document.getElementById('course').value,
                availability: document.getElementById('availability').value,
            };

            // Format data as plain text
            const textContent = `
Name: ${formData.name}
Email: ${formData.email}
Subject: ${formData.subject}
Message: ${formData.message}
Course: ${formData.course}
Availability: ${formData.availability}
            `;

            // Create a blob with the text content
            const blob = new Blob([textContent], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);

            // Create a temporary anchor element to trigger the download
            const a = document.createElement('a');
            a.href = url;
            a.download = 'formData.txt'; // File name
            a.click();

            // Revoke the URL to free up memory
            URL.revokeObjectURL(url);
        }
    </script>
</body>
</html>
